#include<iostream>
#include<string>
#include<queue>
using namespace std;
int n, m;
int map[102][102];
int dir[4][2] = { {-1,0},{0,1},{1,0},{0,-1} };
class state
{
public:
	int x, y;
	int count;
	state(int a, int b, int c)
	{
		x = a;
		y = b;
		count = c;
	}
};
void bfs(int startx, int starty)
{
	queue<state> q;
	q.push(state(startx,starty,1));
	while (!q.empty())
	{
		int x = q.front().x;
		int y = q.front().y;
		int count = q.front().count;
		if (x == n - 1 && y == m - 1)
		{
			printf("%d ", count);
			break;
		}		
		map[x][y] = 2;   //2는 방문한 지점
		q.pop();
		for (int d = 0; d < 4; d++)
		{
			int nextx = x + dir[d][0];
			int nexty = y + dir[d][1];
			if (nextx < 0 || nexty < 0 || nextx >= n || nexty >= m)continue;
			if (map[nextx][nexty] != 1)continue;
			map[nextx][nexty] = 2;
			q.push(state(nextx, nexty, count + 1));
		}

	}
}
int main()
{
	cin >>n >> m;
	for (int i = 0; i < n; i++)
	{
		string str;
		cin >> str;
		for (int j = 0; j < m; j++)
		{
			map[i][j] = str[j]-'0';
		}
	}
	bfs(0, 0);


	

	return 0;
}